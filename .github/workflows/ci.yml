name: "Continuous Integration"

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  quality-checks:
    name: "Code Quality & Tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint

      - name: Run type checking
        run: pnpm typecheck

      - name: Run tests (if available)
        run: |
          if pnpm list --depth=0 | grep -q "jest\|vitest\|mocha"; then
            pnpm test
          else
            echo "No test framework detected, skipping tests"
          fi
        continue-on-error: true

  security-scan:
    name: "Security Audit"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit

  build-validation:
    name: "Build Validation"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build web package first
        run: pnpm --filter web build
        
      - name: Build remaining packages
        run: pnpm --filter "!web" build

      - name: Check build outputs
        run: |
          echo "Checking build outputs..."
          find packages -name "dist" -o -name "build" -type d | while read dir; do
            if [ -d "$dir" ] && [ "$(ls -A "$dir")" ]; then
              echo "✅ $dir contains build output"
            else
              echo "❌ $dir is empty or missing"
            fi
          done
