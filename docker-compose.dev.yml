version: '3.8'

services:
  # PostgreSQL 数据库 with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: noteum-postgres-dev
    environment:
      POSTGRES_DB: noteum_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_dev
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - noteum-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d noteum_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: noteum-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - noteum-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # NestJS 服务 (开发模式)
  nestjs-service:
    build:
      context: .
      dockerfile: apps/services/Dockerfile.dev
    container_name: noteum-nestjs-dev
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js 调试端口
    volumes:
      - .:/app
      - /app/node_modules
      - nestjs_logs_dev:/app/logs
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: noteum_dev
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TRPC_SERVER_PORT: 3000
      LOG_LEVEL: debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - noteum-network
    restart: unless-stopped
    command: pnpm run dev

  # 客户端应用 (开发模式)
  client-app:
    build:
      context: .
      dockerfile: apps/clients/Dockerfile.dev
    container_name: noteum-client-dev
    ports:
      - "5173:5173"  # Vite 默认端口
    volumes:
      - ./apps/clients:/app/apps/clients
      - ./packages:/app/packages
      - /app/node_modules
    environment:
      NODE_ENV: development
      VITE_TRPC_SERVER_URL: http://localhost:3000/trpc
    depends_on:
      - nestjs-service
    networks:
      - noteum-network
    restart: unless-stopped
    command: pnpm --filter @noteum/clients dev

  # 管理界面
  adminer:
    image: adminer:latest
    container_name: noteum-adminer-dev
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - noteum-network
    restart: unless-stopped

  # Redis 管理界面
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: noteum-redis-commander-dev
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - noteum-network
    restart: unless-stopped

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  nestjs_logs_dev:
    driver: local

networks:
  noteum-network:
    driver: bridge