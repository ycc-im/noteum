# Docker Compose override for development environment
# This file extends docker-compose.yml for local development with hot reloading
# Automatically loaded when running `docker-compose up`

services:
  # Server Development Configuration
  server:
    build:
      target: development # Use development stage from Dockerfile
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
    volumes:
      # Mount source code for hot reloading
      - ./packages/server/src:/app/packages/server/src
      - ./packages/shared/src:/app/packages/shared/src
      # Mount package.json for dependency changes
      - ./packages/server/package.json:/app/packages/server/package.json
      - ./packages/shared/package.json:/app/packages/shared/package.json
      # Mount tsconfig for TypeScript changes
      - ./packages/server/tsconfig.json:/app/packages/server/tsconfig.json
      - ./packages/shared/tsconfig.json:/app/packages/shared/tsconfig.json
      # Exclude node_modules to avoid conflicts
      - /app/packages/server/node_modules
      - /app/packages/shared/node_modules
    command: ["sh", "-c", "cd packages/server && pnpm run start:dev"]
    # Remove healthcheck for faster startup in development
    healthcheck:
      disable: true

  # Web Development Configuration
  web:
    build:
      target: development # Use development stage for hot reloading
    environment:
      NODE_ENV: development
    volumes:
      # Mount source code for hot reloading
      - ./packages/web/src:/app/packages/web/src
      - ./packages/shared/src:/app/packages/shared/src
      # Mount configuration files
      - ./packages/web/package.json:/app/packages/web/package.json
      - ./packages/shared/package.json:/app/packages/shared/package.json
      - ./packages/web/tsconfig.json:/app/packages/web/tsconfig.json
      - ./packages/shared/tsconfig.json:/app/packages/shared/tsconfig.json
      - ./packages/web/vite.config.ts:/app/packages/web/vite.config.ts
      - ./packages/web/tailwind.config.ts:/app/packages/web/tailwind.config.ts
      # Mount public assets
      - ./packages/web/public:/app/packages/web/public
      # Exclude node_modules to avoid conflicts
      - /app/packages/web/node_modules
      - /app/packages/shared/node_modules
    command: ["sh", "-c", "cd packages/web && pnpm run dev"]
    # Remove dependency on server healthcheck in development
    depends_on:
      - postgres
    # Remove healthcheck for faster startup in development
    healthcheck:
      disable: true
