# Quick Start Docker Compose Configuration
# 用于快速启动核心服务的简化配置
# Usage: docker-compose -f docker-compose.quick-start.yml up -d

services:
  # PostgreSQL Database with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: noteum-postgres
    environment:
      POSTGRES_DB: noteum
      POSTGRES_USER: noteum_user
      POSTGRES_PASSWORD: noteum_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - noteum-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U noteum_user -d noteum"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: noteum-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@noteum.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - noteum-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  # NestJS Server (Development Ready)
  server:
    build:
      context: .
      dockerfile: packages/server/Dockerfile
      target: development
    container_name: noteum-server
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: "postgresql://noteum_user:noteum_password@postgres:5432/noteum"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: noteum
      POSTGRES_USER: noteum_user
      POSTGRES_PASSWORD: noteum_password
      GRPC_HOST: "0.0.0.0"
      GRPC_PORT: 5001
      LOG_LEVEL: debug
    ports:
      - "3001:3001"
      - "5001:5001"
    volumes:
      # Mount source code for hot reloading
      - ./packages/server/src:/app/packages/server/src
      - ./packages/shared/src:/app/packages/shared/src
      # Mount package.json for dependency changes
      - ./packages/server/package.json:/app/packages/server/package.json
      - ./packages/shared/package.json:/app/packages/shared/package.json
      # Mount tsconfig for TypeScript changes
      - ./packages/server/tsconfig.json:/app/packages/server/tsconfig.json
      - ./packages/shared/tsconfig.json:/app/packages/shared/tsconfig.json
      # Exclude node_modules to avoid conflicts
      - /app/packages/server/node_modules
      - /app/packages/shared/node_modules
    command: ["sh", "-c", "cd packages/server && pnpm run start:dev"]
    networks:
      - noteum-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  noteum-network:
    driver: bridge
