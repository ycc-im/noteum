/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.
// Import Routes
import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard.index'
import { Route as DashboardPostsImport } from './routes/dashboard.posts'
import { Route as DashboardPostsIndexImport } from './routes/dashboard.posts.index'
import { Route as DashboardPostsPostIdImport } from './routes/dashboard.posts.$postId'
// Create/Update Routes
const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
})
const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
})
const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
})
const DashboardPostsRoute = DashboardPostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => DashboardRoute,
})
const DashboardPostsIndexRoute = DashboardPostsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardPostsRoute,
})
const DashboardPostsPostIdRoute = DashboardPostsPostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => DashboardPostsRoute,
})
const DashboardPostsRouteChildren = {
  DashboardPostsPostIdRoute: DashboardPostsPostIdRoute,
  DashboardPostsIndexRoute: DashboardPostsIndexRoute,
}
const DashboardPostsRouteWithChildren = DashboardPostsRoute._addFileChildren(
  DashboardPostsRouteChildren,
)
const DashboardRouteChildren = {
  DashboardPostsRoute: DashboardPostsRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
}
const DashboardRouteWithChildren = DashboardRoute._addFileChildren(DashboardRouteChildren)
const rootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes()
/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/posts",
        "/dashboard/"
      ]
    },
    "/dashboard/posts": {
      "filePath": "dashboard.posts.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/posts/$postId",
        "/dashboard/posts/"
      ]
    },
    "/dashboard/": {
      "filePath": "dashboard.index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/posts/$postId": {
      "filePath": "dashboard.posts.$postId.tsx",
      "parent": "/dashboard/posts"
    },
    "/dashboard/posts/": {
      "filePath": "dashboard.posts.index.tsx",
      "parent": "/dashboard/posts"
    }
  }
}
ROUTE_MANIFEST_END */
